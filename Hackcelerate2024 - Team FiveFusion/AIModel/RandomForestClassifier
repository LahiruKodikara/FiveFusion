# Code as generated from Copilot on 24th Nov 2024
# Can be exposed through REST API and called on Salesforce
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report
import joblib
from flask import Flask, request, jsonify

# Data Collection and Preprocessing
data = pd.read_csv('')  # Passing the sample Apex code vulnerabilities
X_train, X_test, y_train, y_test = train_test_split(data['code'], data['label'], test_size=0.2, random_state=42)
vectorizer = TfidfVectorizer()
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Model Training
model = RandomForestClassifier()
model.fit(X_train_tfidf, y_train)
y_pred = model.predict(X_test_tfidf)
print(classification_report(y_test, y_pred))

# Saving the Model
joblib.dump(model, 'vulnerability_model.pkl')
joblib.dump(vectorizer, 'vectorizer.pkl')

# Deployment
app = Flask(__name__)
model = joblib.load('vulnerability_model.pkl')
vectorizer = joblib.load('vectorizer.pkl')

@app.route('/predict', methods=['POST'])
def predict():
    code = request.json['code']
    code_tfidf = vectorizer.transform([code])
    prediction = model.predict(code_tfidf)
    return jsonify({'vulnerability': prediction[0]})

if __name__ == '__main__':
    app.run(debug=True)